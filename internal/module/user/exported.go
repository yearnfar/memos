// Code generated by service-export(1.0.0). DO NOT EDIT.
// source: service.go

package user

import (
	"context"

	"github.com/yearnfar/memos/internal/module/user/model"
)

var defaultService Service

func Register(s Service) {
	defaultService = s
}

func CreateUser(ctx context.Context, req *model.CreateUserRequest) (*model.User, error) {
	if defaultService == nil {
		panic("调用模块方法: user.CreateUser 失败，服务未注册")
	}
	v1, v2 := defaultService.CreateUser(ctx, req)
	return v1, v2
}

func SignUp(ctx context.Context, req *model.SignUpRequest) (*model.User, error) {
	if defaultService == nil {
		panic("调用模块方法: user.SignUp 失败，服务未注册")
	}
	v1, v2 := defaultService.SignUp(ctx, req)
	return v1, v2
}

func GetUserByUsername(ctx context.Context, username string) (*model.User, error) {
	if defaultService == nil {
		panic("调用模块方法: user.GetUserByUsername 失败，服务未注册")
	}
	v1, v2 := defaultService.GetUserByUsername(ctx, username)
	return v1, v2
}

func UpsertAccessToken(ctx context.Context, userId int, accessToken, description string) error {
	if defaultService == nil {
		panic("调用模块方法: user.UpsertAccessToken 失败，服务未注册")
	}
	v1 := defaultService.UpsertAccessToken(ctx, userId, accessToken, description)
	return v1
}

func DeleteAccessToken(ctx context.Context, userId int, accessToken string) error {
	if defaultService == nil {
		panic("调用模块方法: user.DeleteAccessToken 失败，服务未注册")
	}
	v1 := defaultService.DeleteAccessToken(ctx, userId, accessToken)
	return v1
}
