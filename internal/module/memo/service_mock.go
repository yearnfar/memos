// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package memo is a generated GoMock package.
package memo

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/yearnfar/memos/internal/module/memo/model"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateMemo mocks base method.
func (m *MockService) CreateMemo(ctx context.Context, req *model.CreateMemoRequest) (*model.Memo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMemo", ctx, req)
	ret0, _ := ret[0].(*model.Memo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMemo indicates an expected call of CreateMemo.
func (mr *MockServiceMockRecorder) CreateMemo(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMemo", reflect.TypeOf((*MockService)(nil).CreateMemo), ctx, req)
}

// CreateMemoComment mocks base method.
func (m *MockService) CreateMemoComment(ctx context.Context, req *model.CreateMemoCommentRequest) (*model.Memo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMemoComment", ctx, req)
	ret0, _ := ret[0].(*model.Memo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMemoComment indicates an expected call of CreateMemoComment.
func (mr *MockServiceMockRecorder) CreateMemoComment(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMemoComment", reflect.TypeOf((*MockService)(nil).CreateMemoComment), ctx, req)
}

// CreateResource mocks base method.
func (m *MockService) CreateResource(ctx context.Context, req *model.CreateResourceRequest) (*model.Resource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateResource", ctx, req)
	ret0, _ := ret[0].(*model.Resource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateResource indicates an expected call of CreateResource.
func (mr *MockServiceMockRecorder) CreateResource(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateResource", reflect.TypeOf((*MockService)(nil).CreateResource), ctx, req)
}

// DeleteMemo mocks base method.
func (m *MockService) DeleteMemo(ctx context.Context, req *model.DeleteMemoRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMemo", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMemo indicates an expected call of DeleteMemo.
func (mr *MockServiceMockRecorder) DeleteMemo(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMemo", reflect.TypeOf((*MockService)(nil).DeleteMemo), ctx, req)
}

// GetMemo mocks base method.
func (m *MockService) GetMemo(ctx context.Context, req *model.GetMemoRequest) (*model.Memo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMemo", ctx, req)
	ret0, _ := ret[0].(*model.Memo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMemo indicates an expected call of GetMemo.
func (mr *MockServiceMockRecorder) GetMemo(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMemo", reflect.TypeOf((*MockService)(nil).GetMemo), ctx, req)
}

// GetWorkspaceSetting mocks base method.
func (m *MockService) GetWorkspaceSetting(ctx context.Context, req *model.GetWorkspaceSettingRequest) (*model.WorkspaceSettingCache, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkspaceSetting", ctx, req)
	ret0, _ := ret[0].(*model.WorkspaceSettingCache)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWorkspaceSetting indicates an expected call of GetWorkspaceSetting.
func (mr *MockServiceMockRecorder) GetWorkspaceSetting(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkspaceSetting", reflect.TypeOf((*MockService)(nil).GetWorkspaceSetting), ctx, req)
}

// ListInboxes mocks base method.
func (m *MockService) ListInboxes(ctx context.Context, req *model.ListInboxesRequest) ([]*model.Inbox, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInboxes", ctx, req)
	ret0, _ := ret[0].([]*model.Inbox)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInboxes indicates an expected call of ListInboxes.
func (mr *MockServiceMockRecorder) ListInboxes(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInboxes", reflect.TypeOf((*MockService)(nil).ListInboxes), ctx, req)
}

// ListMemoRelations mocks base method.
func (m *MockService) ListMemoRelations(ctx context.Context, req *model.ListMemoRelationsRequest) ([]*model.MemoRelation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMemoRelations", ctx, req)
	ret0, _ := ret[0].([]*model.MemoRelation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMemoRelations indicates an expected call of ListMemoRelations.
func (mr *MockServiceMockRecorder) ListMemoRelations(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMemoRelations", reflect.TypeOf((*MockService)(nil).ListMemoRelations), ctx, req)
}

// ListMemos mocks base method.
func (m *MockService) ListMemos(ctx context.Context, req *model.ListMemosRequest) ([]*model.Memo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMemos", ctx, req)
	ret0, _ := ret[0].([]*model.Memo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMemos indicates an expected call of ListMemos.
func (mr *MockServiceMockRecorder) ListMemos(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMemos", reflect.TypeOf((*MockService)(nil).ListMemos), ctx, req)
}

// ListReactions mocks base method.
func (m *MockService) ListReactions(ctx context.Context, req *model.ListReactionsRequest) ([]*model.Reaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListReactions", ctx, req)
	ret0, _ := ret[0].([]*model.Reaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListReactions indicates an expected call of ListReactions.
func (mr *MockServiceMockRecorder) ListReactions(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListReactions", reflect.TypeOf((*MockService)(nil).ListReactions), ctx, req)
}

// ListResources mocks base method.
func (m *MockService) ListResources(ctx context.Context, req *model.ListResourcesRequest) ([]*model.Resource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResources", ctx, req)
	ret0, _ := ret[0].([]*model.Resource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResources indicates an expected call of ListResources.
func (mr *MockServiceMockRecorder) ListResources(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResources", reflect.TypeOf((*MockService)(nil).ListResources), ctx, req)
}

// SetMemoRelations mocks base method.
func (m *MockService) SetMemoRelations(ctx context.Context, req *model.SetMemoRelationsRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMemoRelations", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMemoRelations indicates an expected call of SetMemoRelations.
func (mr *MockServiceMockRecorder) SetMemoRelations(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMemoRelations", reflect.TypeOf((*MockService)(nil).SetMemoRelations), ctx, req)
}

// SetMemoResources mocks base method.
func (m *MockService) SetMemoResources(ctx context.Context, req *model.SetMemoResourcesRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMemoResources", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMemoResources indicates an expected call of SetMemoResources.
func (mr *MockServiceMockRecorder) SetMemoResources(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMemoResources", reflect.TypeOf((*MockService)(nil).SetMemoResources), ctx, req)
}

// SetWorkspaceSetting mocks base method.
func (m *MockService) SetWorkspaceSetting(ctx context.Context, req *model.SetWorkspaceSettingRequest) (*model.WorkspaceSettingCache, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetWorkspaceSetting", ctx, req)
	ret0, _ := ret[0].(*model.WorkspaceSettingCache)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetWorkspaceSetting indicates an expected call of SetWorkspaceSetting.
func (mr *MockServiceMockRecorder) SetWorkspaceSetting(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetWorkspaceSetting", reflect.TypeOf((*MockService)(nil).SetWorkspaceSetting), ctx, req)
}

// UpsertReaction mocks base method.
func (m *MockService) UpsertReaction(ctx context.Context, req *model.UpsertReactionRequest) (*model.Reaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpsertReaction", ctx, req)
	ret0, _ := ret[0].(*model.Reaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpsertReaction indicates an expected call of UpsertReaction.
func (mr *MockServiceMockRecorder) UpsertReaction(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpsertReaction", reflect.TypeOf((*MockService)(nil).UpsertReaction), ctx, req)
}
