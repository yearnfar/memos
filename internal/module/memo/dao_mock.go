// Code generated by MockGen. DO NOT EDIT.
// Source: dao.go

// Package memo is a generated GoMock package.
package memo

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/yearnfar/memos/internal/module/memo/model"
)

// MockDAO is a mock of DAO interface.
type MockDAO struct {
	ctrl     *gomock.Controller
	recorder *MockDAOMockRecorder
}

// MockDAOMockRecorder is the mock recorder for MockDAO.
type MockDAOMockRecorder struct {
	mock *MockDAO
}

// NewMockDAO creates a new mock instance.
func NewMockDAO(ctrl *gomock.Controller) *MockDAO {
	mock := &MockDAO{ctrl: ctrl}
	mock.recorder = &MockDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDAO) EXPECT() *MockDAOMockRecorder {
	return m.recorder
}

// CreateMemo mocks base method.
func (m *MockDAO) CreateMemo(ctx context.Context, memo *model.Memo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMemo", ctx, memo)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMemo indicates an expected call of CreateMemo.
func (mr *MockDAOMockRecorder) CreateMemo(ctx, memo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMemo", reflect.TypeOf((*MockDAO)(nil).CreateMemo), ctx, memo)
}

// FindInboxes mocks base method.
func (m *MockDAO) FindInboxes(ctx context.Context, req *model.FindInboxesRequest) ([]*model.Inbox, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindInboxes", ctx, req)
	ret0, _ := ret[0].([]*model.Inbox)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindInboxes indicates an expected call of FindInboxes.
func (mr *MockDAOMockRecorder) FindInboxes(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindInboxes", reflect.TypeOf((*MockDAO)(nil).FindInboxes), ctx, req)
}

// FindMemos mocks base method.
func (m *MockDAO) FindMemos(ctx context.Context, req *model.FindMemosRequest) ([]*model.Memo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindMemos", ctx, req)
	ret0, _ := ret[0].([]*model.Memo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindMemos indicates an expected call of FindMemos.
func (mr *MockDAOMockRecorder) FindMemos(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindMemos", reflect.TypeOf((*MockDAO)(nil).FindMemos), ctx, req)
}

// FindWorkspaceSettings mocks base method.
func (m *MockDAO) FindWorkspaceSettings(ctx context.Context, req *model.FindWorkspaceSettingsRequest) ([]*model.WorkspaceSetting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindWorkspaceSettings", ctx, req)
	ret0, _ := ret[0].([]*model.WorkspaceSetting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindWorkspaceSettings indicates an expected call of FindWorkspaceSettings.
func (mr *MockDAOMockRecorder) FindWorkspaceSettings(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindWorkspaceSettings", reflect.TypeOf((*MockDAO)(nil).FindWorkspaceSettings), ctx, req)
}
