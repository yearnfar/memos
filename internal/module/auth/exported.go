// Code generated by service-export(1.0.0). DO NOT EDIT.
// source: service.go

package auth

import (
	"context"
	"time"

	"github.com/yearnfar/memos/internal/module/auth/model"
)

var defaultService Service

func Register(s Service) {
	defaultService = s
}

func SignIn(ctx context.Context, req *model.SignInRequest) (*model.SignInResponse, error) {
	if defaultService == nil {
		panic("调用模块方法: auth.SignIn 失败，服务未注册")
	}
	v1, v2 := defaultService.SignIn(ctx, req)
	return v1, v2
}

func GenerateAccessToken(ctx context.Context, userId int32, expirationTime time.Time) (*model.AccessToken, error) {
	if defaultService == nil {
		panic("调用模块方法: auth.GenerateAccessToken 失败，服务未注册")
	}
	v1, v2 := defaultService.GenerateAccessToken(ctx, userId, expirationTime)
	return v1, v2
}

func Authenticate(ctx context.Context, tokenStr string) (*model.AccessToken, error) {
	if defaultService == nil {
		panic("调用模块方法: auth.Authenticate 失败，服务未注册")
	}
	v1, v2 := defaultService.Authenticate(ctx, tokenStr)
	return v1, v2
}
